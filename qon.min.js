/*!
 * qon.js
 *
 * qon.js is a tiny dependency injection library that has angularjs flavor but a requirejs-like syntax.
 *
 * @version 1.0.0
 * @author Hiroyuki OHARA <Hiroyuki.no22@gmail.com>
 * @copyright (c) 2014 Hiroyuki OHARA
 * @see https://github.com/no22/qon
 * @license MIT
 */(function(e,t,n){typeof define=="function"&&define.amd?define([],n):typeof exports=="object"?module.exports=n():e[t]=n()})(this,"qon",function(){"use strict";function r(e){this.factories={},this.modules={},this.parent=e||{},this.prefix="$_"}function i(e,t){return e.length>t.length&&e.slice(0,t.length)===t}function s(e){return new r(e)}var e=/\s+/mg,t=/(?:\/\*[\s\S]*?\*\/|\/\/.*$)/mg,n=/^function\s*[^\(]*\(\s*([^\)]*)\)/m,o={module:function(r,i,s){return s||(s=i,i=s.toString().match(n)[1].replace(t,"").replace(e,"").split(",")),this.factories[r]={deps:i,factory:s},this.modules.hasOwnProperty(r)&&delete this.modules[r],this},_resolve:function(e,t){var n=[],r=e.length,i;for(i=0;i<r;i++)n[i]=this.resolve(e[i]);return t.apply(this,n)},_promise:function(e,t,n){var r=this,i=!1,s;return function(){return i?s:(s=t[e]=r._resolve(n.deps,n.factory),i=!0,s)}},resolve:function(e){var t=this.modules,n=this.factories,r=this.parent,s,o,u=!1,a=this.prefix;i(e,a)&&(u=e.slice(a.length));if(t.hasOwnProperty(e))o=t[e];else if(u&&n.hasOwnProperty(u))o=t[e]=this._promise(u,t,n[u]);else if(n.hasOwnProperty(e))s=n[e],o=t[e]=this._resolve(s.deps,s.factory);else if(r instanceof this.constructor)o=r.resolve(e);else{if(!r||typeof r!="object"||!r.hasOwnProperty(e))throw"Error: can't resolve module '"+e+"'";o=r[e]}return o},inject:function(e,t){if(t)this.factories[e].deps=t;else for(var n in e)this.factories[n].deps=e[n];return this},run:function(e,t){return arguments.length===1?this.resolve(e):this._resolve(e,t)},di:function(e){return s(e||this)}};r._super_=null,r.prototype=Object.create(null,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}});for(var u in o)r.prototype[u]=o[u];return{Container:r,di:s}});